{
  "openapi": "3.0.1",
  "info": {
    "title": "Decagon Hiring App",
    "description": "This is all documentation of the APIs for the decagon hiring app.",
    "version": "0.1.9"
  },
  "servers": [
    {
      "url": "http://localhost:3005/api/v1",
      "description": "server for localhost can be any port for testing (development)."
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about users"
    },
    {
      "name": "interview",
      "description": "Schedules of interviews"
    }
  ],
  "paths": {
    "/users/decadevs": {
      "get": {
        "tags": ["user"],
        "summary": "Lists all decadevs on the platform",
        "description": "Returns a JSON array list of all decadevs",
        "operationId": "getAllDecadevs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "summary": "Operation successful",
            "description": "A JSON array list of all users(decadevs)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Decadevs found"
          }
        }
      }
    },
    "/users/update-password/": {
      "put": {
        "tags": ["user"],
        "summary": "Updates password",
        "description": "Allows user to update password via email",
        "operationId": "updatePassword",
        "produces": ["application/json"],
        "requestBody": {
          "description": "The object of the user to be updated.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Email"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/Email"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/Email"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/definitions/Email"
              }
            }
          }
        },
        "responses": {
          "200": {
            "summary": "Returns a decadev object that has been updated.",
            "description": "Operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Password updated."
          },
          "400": {
            "description": "The specified user email is invalid."
          },
          "404": {
            "description": "A user with the specified email was not found."
          },
          "405": {
            "description": "Validation exception."
          }
        }
      }
    },
    "/users/hiring-partner/invite": {
      "post": {
        "tags": ["user"],
        "summary": "A hiring partner invite.",
        "description": "The admin creates an invite for hiring partner.",
        "operationId": "inviteHiringPartner",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/interview/invite/{interviewId}": {
      "post": {
        "tags": ["interview"],
        "summary": "Schedules an interview by userId",
        "description": "A hiring partner invites a decadev for interview.",
        "operationId": "scheduleInterview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "interviewId",
            "description": "An interview Id.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified user ID is invalid (not a number)."
          },
          "404": {
            "description": "A user with the specified ID was not found."
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["password"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "profilePhoto": {
          "type": "string"
        }
      }
    },
    "Email": {
      "type": "object",
      "required": true,
      "properties": {
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "UserId": {
      "type": "string"
    }
  },
  "Error": {
    "properties": {
      "code": {
        "type": "string"
      },
      "message": {
        "type": "string"
      }
    }
  }
}
